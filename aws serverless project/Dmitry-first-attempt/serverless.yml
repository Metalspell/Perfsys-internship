service: first-attempt 

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: eu-central-1
    # These environment variables are made available to our functions
  # under process.env.
  environment:
    tableName: ${self:service}-${self:provider.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - { "Fn::GetAtt": [ "visitsTable", "Arn" ] }  

resources:
  Resources:
    # uploadBucket:
    #   Type: AWS::S3::Bucket
    #   Properties:
    #     # BucketName: ${self:service}-${self:custom.stage}-uploads
    visitsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

functions:
  putItem:
    handler: handler.putWeatherData
    events:
      - http:
          path: /id
          method: get
  getItem:
    handler: handler.getWeatherData
    events:
      - http:
          path: /weather
          method: get
