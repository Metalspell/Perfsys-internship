service: first-attempt 

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: eu-central-1
  # These environment variables are made available to our functions
  # under process.env.
  environment:
    TABLE_NAME: ${self:service}-${self:provider.stage}
    API_KEY: 'b078a7d81849e7d2b796924e54583a40'
    YOUR_CITY: 'dnipro'
    URL: 'http://api.openweathermap.org/data/2.5/weather'
    REGION: ${self:provider.region}

  iamRoleStatements:
    - Effect: Allow
      Action:
        # - dynamodb:DescribeTable
        # - dynamodb:Query
        # - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        # - dynamodb:UpdateItem
        # - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - { "Fn::GetAtt": [ "visitsTable", "Arn" ] }  

resources:
  Resources:
    visitsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

functions:
  PutItem:
    handler: handler.putWeatherData
    events:
      - http:
          path: post/item
          method: get
  GetItem:
    handler: handler.getWeatherData
    events:
      - http:
          path: /item/id
          method: get
